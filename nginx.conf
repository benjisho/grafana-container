events { worker_connections 1024; }

http {
    server {
        listen 80;
        server_name localhost;
        # redirect http to https
        return 301 https://$host$request_uri;
    }
    server {
        listen 443 ssl;
        # SSL settings for Grafana
        server_name localhost;

        # SSL settings for Grafana
        ssl_certificate /etc/nginx/certs/server.crt;
        ssl_certificate_key /etc/nginx/certs/server.key;

        # Enable HSTS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Add a Content Security Policy
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; img-src 'self' data:; style-src 'self' 'unsafe-inline'; font-src 'self'; object-src 'none'";

        # Use secure SSL protocols and ciphers
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256;

        # Add rate limiting to prevent abuse
        limit_req_zone $binary_remote_addr zone=one:10m rate=10r/s;

        location / {
            limit_req zone=one burst=20;
            proxy_pass http://grafana:3000;
            proxy_set_header Host $host;
        }
    }
}
